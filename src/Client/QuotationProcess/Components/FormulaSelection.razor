@using Foodtruck.Client.QuotationProcess.Components
@using Foodtruck.Client.QuotationProcess.Helpers;
@inject QuotationProcessState QuotationProcessState
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-2">
	<Formulas />

	@if (ValidationFailed)
	{
		<MudText Color="Color.Error" Class="mb-3">Gelieve een formule te selecteren om door te gaan</MudText>
	}
	@if (QuotationProcessState.ReachedEnd)
	{
		<MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="GoToOverview">Keer terug naar overzicht</MudButton>
	}
	else
	{
		<MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="QuotationProcessStepControl.PreviousStep">Vorige stap</MudButton>
		<MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="Submit">Doorgaan</MudButton>
	}
</MudContainer>


@code {
	[CascadingParameter] private QuotationProcessStepControl QuotationProcessStepControl { get; set; }
	public bool HasSelectedFormula => QuotationProcessState.CurrentSelectedFormula != null;
	public bool ValidationFailed { get; set; }

	private void Submit()
	{
		ValidationFailed = false;

		if (!HasSelectedFormula)
		{
			ValidationFailed = true;
			return;
		}

		QuotationProcessStepControl.NextStep();
	}

	private void GoToOverview()
	{
		ValidationFailed = false;

		if (!HasSelectedFormula)
		{
			ValidationFailed = true;
			return;
		}

		QuotationProcessStepControl.GoToStep(4, true);
	}

	protected override void OnInitialized()
	{
		if (QuotationProcessStepControl == null)
			throw new ArgumentNullException(nameof(QuotationProcessStepControl), "FormulaSelection must be used inside a QuotationProcessStep");

		base.OnInitialized();
	}
}