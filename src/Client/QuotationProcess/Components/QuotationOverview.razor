@using Domain.Supplements;
@using Foodtruck.Client.QuotationProcess.Helpers;
@using Foodtruck.Shared.Customers;
@using Foodtruck.Shared.Formulas;
@using Foodtruck.Shared.Quotations;
@using Foodtruck.Shared.Reservations;

<MudStack Spacing="5">
	<MudText Typo="Typo.h4" Align="Align.Center">
		Overzicht aanvraag
	</MudText>

	<MudPaper Outlined>
		@SectionHeader("Datum", 0)

		<MudGrid Class="flex-wrap px-5 pb-5 pt-2" Justify="Justify.Center" Spacing="1">
			<MudItem xs="12" sm="4">
				<MudStack Row Spacing="2" AlignItems="AlignItems.Center" Justify="Justify.Center">
						<MudText>Levering op</MudText>
						<MudChip Size="Size.Large" Color="Color.Primary" Variant="Variant.Filled">
							@(Reservation.Start is null ? "/" : "📅 " + Reservation.Start?.ToString("dd / MM / yyyy"))
					</MudChip>
				</MudStack>
			</MudItem>

			<MudItem xs="1" Class="d-flex justify-center align-center">
				<MudIcon Icon="@Icons.Material.Filled.ArrowRightAlt" Size="Size.Medium" Style="" />
			</MudItem>

			<MudItem xs="12" sm="5">
				<MudStack Row Spacing="2" AlignItems="AlignItems.Center" Justify="Justify.Center">
						<MudText>Opgehaald op</MudText>
						<MudChip Size="Size.Large" Color="Color.Primary" Variant="Variant.Filled">
							@(Reservation.End is null ? "/" : "📅 " + Reservation.End?.ToString("dd / MM / yyyy"))
					</MudChip>
				</MudStack>
			</MudItem>
		</MudGrid>
		@* TODO: aantal dagen weergeven *@
	</MudPaper>

	<MudPaper Outlined>
		@SectionHeader("Formule", 1)

		<MudStack Class="px-7 pb-7 pt-5">
			<MudGrid>
				<MudItem>
					<MudImage Src="@Formula.ImageUrl?.ToString()" Style="width: 100px;height: 100%;" Alt="@Formula.Title" Class="rounded-lg" ObjectFit="ObjectFit.Cover" />
				</MudItem>
				<MudItem>
					<h1>@Formula.Title</h1>
					<MudText>@Formula.Description</MudText>
				</MudItem>
			</MudGrid>

			@* TODO: inbegrepen supplementen weergeven
			<MudText Typo="Typo.body2">Inbegrepen: ...</MudText> *@

			@if (FormulaChoiceFormItems.Any())
			{
				<MudText Typo="Typo.body2">
					Uw keuze's:
				</MudText>
				<MudPaper Outlined Class="pa-2">
						@foreach (FormulaChoiceFormItem supplement in FormulaChoiceFormItems)
					{
						<MudGrid>
							<MudItem Class="d-flex align-center justify-start">
								<MudImage Src="@(supplement.Supplement.ImageUrls?.ElementAt(0).ToString())" Width="50" Height="50" ObjectFit="ObjectFit.Cover" Class="rounded my-1" />
							</MudItem>

							<MudItem xs="5" Class="d-flex align-center justify-start">
								<MudText>
									@(supplement.Supplement.Name)
								</MudText>
							</MudItem>

							<MudItem xs="3" Class="d-flex align-center justify-start">
								x @supplement.Quantity
							</MudItem>

						</MudGrid>
						<MudDivider />
					}
				</MudPaper>
			}
		</MudStack>
	</MudPaper>

	<MudPaper Outlined>
		@SectionHeader("Extra's", 2)

		<MudStack Class="px-7 pb-7 pt-5">
			@if (ExtraSupplementLines.Any())
			{
				<MudPaper Outlined Class="pa-2">
						@foreach (var supplementItem in ExtraSupplementLines)
					{
						<MudGrid>
							<MudItem Class="d-flex align-center justify-start">
								<MudImage Src="@(supplementItem.Supplement.ImageUrls?.ElementAt(0).ToString())" Width="50" Height="50" ObjectFit="ObjectFit.Cover" Class="rounded" />
							</MudItem>

							<MudItem xs="5" Class="d-flex align-center justify-start">
								<MudText>
									@(supplementItem.Supplement.Name)
								</MudText>
							</MudItem>

							<MudItem xs="3" Class="d-flex align-center justify-start">
								x @supplementItem.Quantity
							</MudItem>
						</MudGrid>

						<MudDivider />
					}
				</MudPaper>
			}
			else
			{
				<span>Geen extra's gekozen.</span>
			}
		</MudStack>

	</MudPaper>

	<MudPaper Outlined>
		@SectionHeader("Gegevens", 3)

		<MudStack Class="px-5 pb-5 pt-1">
			<MudGrid>
				<MudItem xs="6">
					<MudGrid Class="px-5 pt-5">
						<MudItem>
							<MudText><b>Voornaam:</b> </MudText>
							<MudText><b>Achternaam:</b> </MudText>
							<MudText><b>Email:</b> </MudText>
							<MudText><b>Telefoonnr.:</b></MudText>
						</MudItem>

						<MudItem>
							<MudText>@Customer.Firstname</MudText>
							<MudText> @Customer.Lastname</MudText>
							<MudText>@Customer.Email</MudText>
							<MudText>@Customer.Phone</MudText>
						</MudItem>
					</MudGrid>

					<MudGrid Class="pa-5">
						<MudItem>
							<MudText><b>Bedrijfsnaam:</b> </MudText>
							<MudText><b>Ondernemingsnummer:</b> </MudText>
						</MudItem>

						<MudItem>
							<MudText>@Customer.CompanyName</MudText>
							<MudText>@Customer.CompanyNumber</MudText>
						</MudItem>
					</MudGrid>
				</MudItem>

				<MudItem xs="6">
					<MudPaper Elevation="0" Class="pa-5 pb-0">
						<MudText>
							<b>Evenementadres</b>
						</MudText>
						<MudText>
							@($"{EventAddress.Street} {EventAddress.HouseNumber}")
						</MudText>
						<MudText>
							@($"{EventAddress.Zip} {EventAddress.City}")
						</MudText>
					</MudPaper>

					<MudPaper Elevation="0" Class="pa-5">
						<MudText>
							<b>Factuuradres</b>
						</MudText>
						<MudText>
							@($"{BillingAddress.Street} {BillingAddress.HouseNumber}")
						</MudText>
						<MudText>
							@($"{BillingAddress.Zip} {BillingAddress.City}")
						</MudText>
					</MudPaper>
				</MudItem>
			</MudGrid>

			<MudDivider />

			<MudText Typo="Typo.body2">Extra info:</MudText>
			<MudPaper Class="px-5 pb-5 pt-3" Elevation="0">
				<MudText>@ExtraInfo</MudText>
			</MudPaper>
		</MudStack>
	</MudPaper>

	<MudStack Row AlignItems="AlignItems.Center" Class="ml-auto">
		Ik heb de algemene voorwaarden gelezen en ik ga hiermee akkoord.* <MudCheckBox Checked="false" />
	</MudStack>

	<MudStack Row>
		<MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" DisableElevation OnClick="Submit">
			Plaats offerte
		</MudButton>
	</MudStack>

</MudStack>


	@code {
	private RenderFragment SectionHeader(string title, int stepIndex) =>
	@<MudStack Row AlignItems="AlignItems.End">
		<MudText Typo="Typo.body2" Class="px-4">
			@title:
		</MudText>
		<MudButton Class="ml-auto rounded-br-0 rounded-tl-0" Style="margin:-1px" Variant="Variant.Filled" Color="Color.Primary" DisableElevation
					OnClick="@(() => QuotationProcessStepControl?.GoToStep(stepIndex))">
			<MudIcon Icon="@Icons.Material.Filled.Edit" Color="Color.Surface" Size="Size.Small" />
		</MudButton>
	</MudStack>;

	[Inject] public QuotationProcessState QuotationProcessState { get; set; } = default!;
	[Inject] public IQuotationService QuotationService { get; set; } = default!;
	[CascadingParameter] private QuotationProcessStepControl? QuotationProcessStepControl { get; set; }

	private ReservationDto.Create Reservation => QuotationProcessState.Quotation.Reservation;

	private FormulaDto.Detail Formula => QuotationProcessState.CurrentSelectedFormula!;
	private IReadOnlyCollection<FormulaChoiceFormItem> FormulaChoiceFormItems => QuotationProcessState.ChosenFormulaChoiceItems;
	private IReadOnlyCollection<ExtraSupplementLine> ExtraSupplementLines => QuotationProcessState.ExtraSupplementLines;

	private AddressDto BillingAddress => QuotationProcessState.Quotation.BillingAddress;
	private AddressDto EventAddress => QuotationProcessState.Quotation.EventAddress;
	private CustomerDto.Create Customer => QuotationProcessState.Customer;
	private string ExtraInfo => QuotationProcessState.Quotation.ExtraInfo ?? "";

	private async Task Submit()
	{
		await QuotationService.CreateAsync(QuotationProcessState.Quotation);
	}

}
